!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t){e.exports={patterns:{"#":new RegExp("\\d"),"&":new RegExp("[a-zA-Z]"),"@":new RegExp("[a-zA-Z0-9]"),$:new RegExp("[^a-zA-Z0-9\\s]")},allowedChars:new RegExp("[#@&\\$]","gi"),separators:new RegExp("[,\\.\\/(\\[\\{\\}\\])|\\-_\\*\\^:;\\|—¯]","g"),placeholder:"ø"}},function(e,t){e.exports=(e,t)=>e.replace(t,"")},function(e,t){e.exports=e=>e.join("")},function(e,t,n){const r=n(1),{separators:o}=n(0),c=n(4),s=n(6),a=function({input:e,pattern:t,onSuccess:n,onError:a}){const u=s(t),l=r(e,o),p=u.map(e=>c(l,e)).reduce((e,t)=>e.output.length>=t.output.length&&e.completed?e:t),{completed:i,output:f}=p;return i&&n&&n(),!i&&a&&a(),{output:f,input:e,pattern:t,onSuccess:n,onError:a,completed:i}};console.log(a({input:"12345678900",pattern:["###.###-###.##","###-##"],onError:function(){console.log("falhou")},onSuccess:function(){console.log("deu certo")}}))},function(e,t,n){const{patterns:r}=n(0),o=n(5);e.exports=(e,t)=>{const{cleanedMask:n}=t;let c="";return[...e].forEach((e,t)=>{const o=r[n[t]];null!=o&&o.test(e)&&(c+=e)}),o(c,t)}},function(e,t,n){const r=n(2),{separators:o,placeholder:c}=n(0),s=n(1);e.exports=(e,t)=>{let n=r(t.blindedMask);const a=new RegExp(o.source+"*"+c+".*","g");return[...e].forEach(e=>{n=n.replace(c,e)}),n=s(n,a),{output:n,completed:n.length===t.originalMask.length}}},function(e,t,n){const r=n(7),o=n(9),c=n(10);e.exports=e=>{const t=Array.isArray(e)?e:[e],n=t.map(e=>(e=>{const t=[...e];return{originalMask:t,cleanedMask:o(e),blindedMask:c(t)}})(e));return r({maskSettings:n,checkKey:"originalMask",orderByKey:"cleanedMask",errorMsg:"Two or more masks have the same amount of input characters. You must correct it."})}},function(e,t,n){const r=n(8);e.exports=({maskSettings:e,checkKey:t,orderByKey:n,errorMsg:o})=>Object.assign([],e).sort((e,c)=>{if(r(e[t])===r(c[t]))throw o;return e[n].length-c[n].length})},function(e,t,n){const r=n(2),o=n(1),{separators:c}=n(0);e.exports=e=>{const t=r(e);return o(t,c)}},function(e,t,n){const r=n(1),{allowedChars:o,separators:c}=n(0);e.exports=e=>{const t=r(e,c),n=t.match(o);if(t.length!==n.length)throw"The mask has some invalid pattern character.";return n}},function(e,t,n){const{allowedChars:r,placeholder:o}=n(0);e.exports=e=>e.map(e=>e.match(r)?o:e)}]);